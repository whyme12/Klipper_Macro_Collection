[gcode_macro anneal]
# points on heating curve [hours to heat up, target_temperature]
variable_anneal_preheat: [[1, 75], [1, 80], [1, 120]]    # preheating phase
variable_anneal_cooldown: [[2, 80], [1, 50]]             # cooldown phase
description: Annealing process for PC using the heated bed, based on https://ultimaker.com/it/learn/how-to-anneal-pet-cf-for-better-performance/
gcode:
  {% set part_thickness_mm = params.THICKNESS|default(2)|float %} # parameter part THICKNESS to calculate hours to anneal (mm / 2)
  {% set current_temp = printer['heater_bed'].temperature %}

  # prepare heating curve data
  {% set space = namespace() %} # namespace required for variables survive for loop
  {% set space.curve = anneal_preheat + [[(part_thickness_mm / 2), 120]] + anneal_cooldown %}
  {% set space.current_temp = printer['heater_bed'].temperature %} # start with current bed temp to calculate initial ramp up

  # loop through each phase of heating curve
  {% for phase in space.curve %}
    RESPOND MSG="phase: {phase}"
    {% set minutes = phase[0] * 60 %}
    {% set target_temp = phase[1] %}
    RESPOND MSG="_anneal_ramp MINUTES={minutes} T_START={space.current_temp} T_TARGET={target_temp}"
    _anneal_ramp MINUTES={minutes} T_START={space.current_temp} T_TARGET={target_temp}
    {% set space.current_temp = target_temp %} # store target temp as start temp for next phase
  {% endfor %}
 
[gcode_macro _anneal_ramp]
gcode:
  # parameter
  {% set minutes = params.MINUTES|int %}
  {% set t_start = params.T_START|float %}
  {% set t_target = params.T_TARGET|float %}

  # calculate temperature ramp
  {% set t_ramp = (t_target - t_start)/minutes %}

  RESPOND MSG="minutes: {minutes} t_start: {t_start} t_target: {t_target} t_ramp: {t_ramp}"

  {% set space = namespace() %} # namespace required for variables survive for loop
  {% set space.next_temp = t_start + t_ramp %}  # get next temperature target
  {% for n in range(0,minutes) %}
    RESPOND MSG="loop {n}: temp: {space.current_temp}"
    M140 S{space.next_temp} # set temperature
    {% set space.next_temp = space.current_temp + t_ramp %} # get next temperature target
    G4 P60000 # wait 1 minute
  {% endfor %}
